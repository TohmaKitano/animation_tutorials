{"version":3,"file":"assets/js/main.js","mappings":"yBAIA,IAMIA,EAAkBC,OAAOC,WAC7BD,OAAOE,iBAAiB,UAAU,WAPZ,IAEdC,EAMFJ,IAAoBC,OAAOC,aAE/BF,EAAkBC,OAAOC,WARnBE,EAA0C,IAArBH,OAAOI,YAClCC,SAASC,gBAAgBC,MAAMC,YAAY,OAAO,GAAGC,OAAON,EAAmB,WAYjF,IAAMO,EAAoB,SAACC,GACzB,IAAIC,EAAiBC,EAAOR,SAASS,qBAAqB,QAAQ,GAE9DC,EAAef,OAAOgB,UAAUC,UAAUC,cAC1CC,EAAcJ,EAAaK,QAAQ,WAAa,GAAKL,EAAaK,QAAQ,SAAW,GAAKL,EAAaK,QAAQ,cAAc,GAAK,eAAgBf,SAIlJgB,EAAiBrB,OAAOC,WAAaI,SAASQ,KAAKS,YACvDC,QAAQC,IAAIZ,QACFa,IAANd,GACFE,EAAKN,MAAMmB,aAAeL,EAAiB,KAEvCF,GACFP,GAAmBZ,OAAO2B,YAC1Bd,EAAKN,MAAMqB,SAAW,QACtBf,EAAKN,MAAMsB,MAAQ,OACnBhB,EAAKN,MAAMuB,IAAMlB,EAAkB,MAEnCC,EAAKN,MAAMwB,SAAW,WAGxBlB,EAAKN,MAAMmB,aAAe,GAEtBP,GACFP,EAAkBoB,SAASnB,EAAKN,MAAMuB,IAAIG,QAAQ,UAAU,KAC5DpB,EAAKN,MAAMqB,SAAW,GACtBf,EAAKN,MAAMsB,MAAQ,GACnBhB,EAAKN,MAAMuB,IAAM,GAEjB9B,OAAOkC,SAAS,EAAGtB,IAEnBC,EAAKN,MAAMwB,SAAW,KAKxBI,EAAO9B,SAAS+B,eAAe,aACnCC,EAAWhC,SAAS+B,eAAe,kBACnCE,EAAYjC,SAAS+B,eAAe,mBACpCG,GAAa,EAOb,SAASC,EAAY7B,GACnBA,IAAI4B,GAPN,SAA4B5B,GAC1B,IAAI8B,EAAE9B,EAAE,OAAO,QACfwB,EAAOO,aAAa,gBAAgBD,GACpCJ,EAAWK,aAAa,gBAAgBD,GACxCH,EAAYI,aAAa,gBAAgBD,GAGvBE,CAAmBhC,GAAG4B,EAAa5B,GACrDY,QAAQC,IAAI,8BAedd,IACA2B,EAAWnC,iBAAiB,SAR5B,WALEsC,GAAY,GAAI9B,GAAkB,MAakB,GACtD4B,EAAYpC,iBAAiB,SAN7B,WALEsC,GAAY,GAAI9B,GAAkB,MAWoB,GAExDL,SAASH,iBAAiB,oBAAoB,WAC5CG,SAASQ,KAAK+B,UAAUC,SAAS,aAAaC,IAC9CzC,SAASQ,KAAK+B,UAAUC,SAAS,aAAaE,WAC9C1C,SAASQ,KAAK+B,UAAUC,SAAS,aAAaG,cAEhD3C,SAASH,iBAAiB,oBAAoB,WAC5CG,SAAS+B,eAAe,aAAaU,IACrCzC,SAAS+B,eAAe,aAAaW,WACrC1C,SAAS+B,eAAe,aAAaY,cAGvC,IAAIF,EAAS,WACX,IAAInC,EAAEsC,KAAKC,WACXD,KAAKE,IAAIhB,EAAO,CACdiB,SAAS,IACTC,WAAW,SACXC,KAAKC,OAAOC,YAEdnB,EAAWnC,iBAAiB,SAAS,WACnCS,EAAE8C,WAAW9C,EAAE+C,OAAO/C,EAAEgD,GAAGxB,EAAO,CAChCkB,WAAW,UAAUD,SAAS,EAAEQ,SAAS,KAE1CC,KAAK,iBAAiB,CAACC,QAAQ,CAACC,OAAO,IAAIX,UAAU,SAExDd,EAAYpC,iBAAiB,SAAS,WACpCS,EAAEqD,c","sources":["webpack:///./src/assets/js/index.js"],"sourcesContent":["import  '../scss/style.scss';\n\n// 100vhを使わない\n// 画面の高さいっぱいに画像を表示する関数\nconst setFillHeight = () => {\n  // innerHeight -> ウィンドウの内部の高さをピクセル単位で返す\n  const VIEW_WINDOW_HEIGHT = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh',''.concat(VIEW_WINDOW_HEIGHT,'px'));\n};\n\nlet viewWindowWidth = window.innerWidth;\nwindow.addEventListener('resize', () => {\n  if (viewWindowWidth === window.innerWidth) return;\n  // 横幅が変更されたら再描画する\n  viewWindowWidth = window.innerWidth;\n  setFillHeight();\n});\n\n// 背景を固定する関数\nconst bodyScrollPrevent = (e) => {\n  let currentPosition, body = document.getElementsByTagName('body')[0];\n  // ユーザーエージェントを取得\n  let getuserAgent = window.navigator.userAgent.toLowerCase();\n  let isUserAgent = getuserAgent.indexOf('iphone') > -1 || getuserAgent.indexOf('ipad') > -1 || getuserAgent.indexOf('macintosh')>-1 && 'ontouchend' in document;\n  // innerHeight -> ウィンドウの内部の高さをピクセル単位で返す\n  // clientWidth -> インライン要素や CSS のない要素ではゼロになる。それ以外では、要素の内側の寸法をピクセル単位で表す\n  // スクロールバーの幅を取得\n  let scrollBarWidth = window.innerWidth - document.body.clientWidth;\n  console.log(currentPosition);\n  if (e !== undefined) {\n    body.style.paddingRight = scrollBarWidth + 'px';\n    // iOSの場合\n    if (isUserAgent) {\n      currentPosition =- window.pageYOffset;\n      body.style.position = 'fixed';\n      body.style.width = '100%';\n      body.style.top = currentPosition + 'px';\n    } else {\n      body.style.overflow = 'hidden'\n    }\n  } else {\n    body.style.paddingRight = '';\n    // iOSの場合\n    if (isUserAgent) {\n      currentPosition = parseInt(body.style.top.replace(/[^0-9]/g,''));\n      body.style.position = '';\n      body.style.width = '';\n      body.style.top = '';\n      // 文書内の特定の組み合わせの座標までスクロールする\n      window.scrollTo(0, currentPosition);\n    } else {\n      body.style.overflow = '';\n    }\n  }\n}\n\nvar drawer=document.getElementById(\"js-drawer\"),\nopenButton=document.getElementById(\"js-open-drawer\"),\ncloseButton=document.getElementById(\"js-close-drawer\"),\nisDrawerOpen=!1;\nfunction changeAriaExpanded(e){\n  var t=e?\"true\":\"false\";\n  drawer.setAttribute(\"aria-expanded\",t),\n  openButton.setAttribute(\"aria-expanded\",t),\n  closeButton.setAttribute(\"aria-expanded\",t)\n}\nfunction changeState(e){\n  e!==isDrawerOpen?(changeAriaExpanded(e),isDrawerOpen=e):\n  console.log(\"エラー！2回以上連続で同じ状態に変更しようとしました\")\n}\nfunction openDrawer(){\n  changeState(!0),bodyScrollPrevent(!0)\n}\nfunction closeDrawer(){\n  changeState(!1),bodyScrollPrevent(!1)\n}\nfunction onClickOpenButton(){\n  openDrawer()\n}\nfunction onClickCloseButton(){\n  closeDrawer()\n}\n\nbodyScrollPrevent(),\nopenButton.addEventListener(\"click\",onClickOpenButton,!1),\ncloseButton.addEventListener(\"click\",onClickCloseButton,!1),\n\ndocument.addEventListener(\"DOMContentLoaded\",(function(){\n  document.body.classList.contains(\"pattern1\")&&pattern1(),\n  document.body.classList.contains(\"pattern2\")&&pattern2(),\n  document.body.classList.contains(\"pattern3\")&&pattern3()\n})),\ndocument.addEventListener(\"DOMContentLoaded\",(function(){\n  document.getElementById(\"pattern1\")&&pattern1(),\n  document.getElementById(\"pattern2\")&&pattern2(),\n  document.getElementById(\"pattern3\")&&pattern3()\n}));\n\nvar pattern1=function(){\n  var e=gsap.timeline();\n  gsap.set(drawer,{\n    xPercent:100,\n    visibility:\"hidden\",\n    ease:Power2.easeInOut\n  }),\n  openButton.addEventListener(\"click\",(function(){\n    e.reversed()?e.play():e.to(drawer,{\n      visibility:\"visible\",xPercent:0,duration:.3\n    })\n    .from(\".js-nav-item a\",{stagger:{amount:.4},xPercent:-100})\n  })),\n  closeButton.addEventListener(\"click\",(function(){\n    e.reverse()\n  }))\n};\n\n// pattern2=function(){\n//   gsap.set(drawer,{\n//     yPercent:-100,visibility:\"hidden\",ease:Power2.easeInOut}),\n//     gsap.set(\".js-nav-item a\",{yPercent:100});\n//     var e=gsap.timeline({});\n//     openButton.addEventListener(\"click\",(function(){\n//       e.reversed()?e.play():e.to(drawer,{\n//         visibility:\"visible\",yPercent:0\n//     })\n//     .to(\".js-nav-item a\",{\n//       stagger:{amount:.6},yPercent:0\n//     })}))\n//     ,closeButton.addEventListener(\"click\",(function(){\n//       e.reverse()\n//     }))\n//   },\n// pattern3=function(){\n//   gsap.set([drawer,\".js-nav-item a\"],{\n//     visibility:\"hidden\",opacity:0\n//   });\n//   var e=gsap.timeline({onReverseComplete:function(){\n//     gsap.set([drawer,\".js-nav-item a\"],{visibility:\"hidden\",opacity:0})\n//   }});\n//   openButton.addEventListener(\"click\",(function(){\n//     e.reversed()?e.play():e.to(drawer,{\n//       visibility:\"visible\",opacity:1,ease:Power2.easeInOut\n//     })\n//     .to(\".js-nav-item a\",{\n//       stagger:{amount:.6},visibility:\"visible\",opacity:1})\n//   })),\n//   closeButton.addEventListener(\"click\",(function(){\n//     e.reverse()\n//   }))\n// };\n\n"],"names":["viewWindowWidth","window","innerWidth","addEventListener","VIEW_WINDOW_HEIGHT","innerHeight","document","documentElement","style","setProperty","concat","bodyScrollPrevent","e","currentPosition","body","getElementsByTagName","getuserAgent","navigator","userAgent","toLowerCase","isUserAgent","indexOf","scrollBarWidth","clientWidth","console","log","undefined","paddingRight","pageYOffset","position","width","top","overflow","parseInt","replace","scrollTo","drawer","getElementById","openButton","closeButton","isDrawerOpen","changeState","t","setAttribute","changeAriaExpanded","classList","contains","pattern1","pattern2","pattern3","gsap","timeline","set","xPercent","visibility","ease","Power2","easeInOut","reversed","play","to","duration","from","stagger","amount","reverse"],"sourceRoot":""}