{"version":3,"file":"assets/js/main.js","mappings":"yBAIA,IAMIA,EAAkBC,OAAOC,WAC7BD,OAAOE,iBAAiB,UAAU,WAPZ,IAEdC,EAMFJ,IAAoBC,OAAOC,aAE/BF,EAAkBC,OAAOC,WARnBE,EAA0C,IAArBH,OAAOI,YAClCC,SAASC,gBAAgBC,MAAMC,YAAY,OAAQ,GAAGC,OAAON,EAAoB,WAYnF,IAAMO,EAAoB,SAACC,GACzB,IAAIC,EAAaC,EAAOR,SAASS,qBAAqB,QAAQ,GAE1DC,EAAef,OAAOgB,UAAUC,UAAUC,cAC1CC,EAAcJ,EAAaK,QAAQ,WAAa,GAAKL,EAAaK,QAAQ,SAAW,GAAKL,EAAaK,QAAQ,cAAc,GAAK,eAAgBf,SAIlJgB,EAAiBrB,OAAOC,WAAaI,SAASQ,KAAKS,YACnDX,GACFE,EAAKN,MAAMgB,aAAeF,EAAiB,KACvCF,GACFP,GAAeZ,OAAOwB,YACtBX,EAAKN,MAAMkB,SAAW,QACtBZ,EAAKN,MAAMmB,MAAQ,OACnBb,EAAKN,MAAMoB,IAAMf,EAAa,MAE9BC,EAAKN,MAAMqB,SAAS,WAGtBf,EAAKN,MAAMgB,aAAe,GACtBJ,GACFP,EAAciB,SAAShB,EAAKN,MAAMoB,IAAIG,QAAQ,UAAU,KACxDjB,EAAKN,MAAMkB,SAAW,GACtBZ,EAAKN,MAAMmB,MAAQ,GACnBb,EAAKN,MAAMoB,IAAM,GACjB3B,OAAO+B,SAAS,EAAGnB,IAGnBC,EAAKN,MAAMqB,SAAW,KAMtBI,EAAe3B,SAAS4B,eAAe,aACvCC,EAAe7B,SAAS4B,eAAe,kBACvCE,EAAe9B,SAAS4B,eAAe,mBAEzCG,GAAe,EAYbC,EAAc,SAAC1B,GACfA,IAAMyB,GAVe,SAACzB,GAC1B,IAAI2B,EAAiB3B,EAAI,OAAS,QAElCqB,EAAOO,aAAa,gBAAiBD,GACrCJ,EAAWK,aAAa,gBAAiBD,GACzCH,EAAYI,aAAa,gBAAiBD,GAMxCE,CAAmB7B,GACnByB,EAAezB,GAEf8B,QAAQC,IAAI,WAqBhBhC,IACAwB,EAAWhC,iBAAiB,SARF,WARxBmC,GAAY,GACZ3B,GAAkB,MAeoC,GACxDyB,EAAYjC,iBAAiB,SANF,WAPzBmC,GAAY,GACZ3B,GAAkB,MAYsC,GAG1DL,SAASH,iBAAiB,oBAAoB,WACxCG,SAAS4B,eAAe,YAAYU,OAI1C,IAAMA,EAAa,WACjB,IAAIC,EAAKC,KAAKC,WACdD,KAAKE,IAAIf,EAAQ,CACfgB,SAAU,IACVC,WAAY,SACZC,KAAMC,OAAOC,YAEflB,EAAWhC,iBAAiB,SAAS,WAC9B0C,EAAGS,WAcNT,EAAGU,OAZHV,EAAGW,GAAGvB,EAAQ,CACViB,WAAY,UACZD,SAAU,EACVQ,SAAU,KAIbC,KAAK,iBAAkB,CACtBC,QAAS,CAAEC,OAAQ,IACnBX,UAAW,SAMjBb,EAAYjC,iBAAiB,SAAS,WACpC0C,EAAGgB,c","sources":["webpack:///./src/assets/js/index.js"],"sourcesContent":["import  '../scss/style.scss';\n\n// 100vhを使わない\n// 画面の高さいっぱいに画像を表示する関数\nconst setFillHeight = () => {\n  // innerHeight -> ウィンドウの内部の高さをピクセル単位で返す\n  const VIEW_WINDOW_HEIGHT = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty('--vh', ''.concat(VIEW_WINDOW_HEIGHT, 'px'));\n};\n\nlet viewWindowWidth = window.innerWidth;\nwindow.addEventListener('resize', () => {\n  if (viewWindowWidth === window.innerWidth) return;\n  // 横幅が変更されたら再描画する\n  viewWindowWidth = window.innerWidth;\n  setFillHeight();\n});\n\n// 背景を固定する関数\nconst bodyScrollPrevent = (e) => {\n  let tmpPosition, body = document.getElementsByTagName('body')[0];\n  // ユーザーエージェントを取得\n  let getuserAgent = window.navigator.userAgent.toLowerCase();\n  let isUserAgent = getuserAgent.indexOf('iphone') > -1 || getuserAgent.indexOf('ipad') > -1 || getuserAgent.indexOf('macintosh')>-1 && 'ontouchend' in document;\n  // innerHeight -> ウィンドウの内部の高さをピクセル単位で返す\n  // clientWidth -> インライン要素や CSS のない要素ではゼロになる。それ以外では、要素の内側の寸法をピクセル単位で表す\n  // スクロールバーの幅を取得\n  let scrollBarWidth = window.innerWidth - document.body.clientWidth;\n  if (e) {\n    body.style.paddingRight = scrollBarWidth + 'px';\n    if (isUserAgent) {\n      tmpPosition =- window.pageYOffset,\n      body.style.position = 'fixed';\n      body.style.width = '100%';\n      body.style.top = tmpPosition +'px';\n    } else {\n      body.style.overflow='hidden'\n    }\n  } else {\n    body.style.paddingRight = '';\n    if (isUserAgent) {\n      tmpPosition = parseInt(body.style.top.replace(/[^0-9]/g,'')),\n      body.style.position = '',\n      body.style.width = '',\n      body.style.top = '',\n      window.scrollTo(0, tmpPosition)\n    }\n    else {\n      body.style.overflow = ''\n    }\n  }\n}\n\n// ドロワーを実行する処理\nconst drawer       = document.getElementById('js-drawer'),\n      openButton   = document.getElementById('js-open-drawer'),\n      closeButton  = document.getElementById('js-close-drawer');\n\nlet isDrawerOpen = false;\n\n// aria-expanded 属性を切り替える関数\nconst changeAriaExpanded = (e) => {\n  let isElementExist = e ? 'true' : 'false';\n  // setAttribute -> 指定した要素上に新しい属性を追加、または既存の属性の値を変更する。\n  drawer.setAttribute('aria-expanded', isElementExist); \n  openButton.setAttribute('aria-expanded', isElementExist); \n  closeButton.setAttribute('aria-expanded', isElementExist);\n}\n\n// 状態を監視する関数\nconst changeState = (e) => {\n  if (e !== isDrawerOpen) {\n    changeAriaExpanded(e);\n    isDrawerOpen = e;\n  } else {\n    console.log('Error!');\n  }\n}\n\n// ドロワーを開閉する関数\nconst openDrawer = () => {\n  changeState(true);\n  bodyScrollPrevent(true);\n}\nconst closeDrawer = () => {\n  changeState(false);\n  bodyScrollPrevent(false);\n}\n// ボタンをクリックする関数\nconst onClickOpenButton = () => {\n  openDrawer();\n}\nconst onClickCloseButton = () => {\n  closeDrawer();\n}\n\nbodyScrollPrevent();\nopenButton.addEventListener('click', onClickOpenButton, false);\ncloseButton.addEventListener('click', onClickCloseButton, false);\n\n// ドロワーを実行する関数\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (document.getElementById('pattern')) drawerMenu();\n});\n\n// GSAP\nconst drawerMenu = () => {\n  let tl = gsap.timeline();\n  gsap.set(drawer, {\n    xPercent: 100,\n    visibility: 'hidden',\n    ease: Power2.easeInOut,\n  });\n  openButton.addEventListener('click', () => {\n    if (!tl.reversed()) {\n      // ゴールの状態を指定する\n      tl.to(drawer, {\n          visibility: 'visible',\n          xPercent: 0,\n          duration: 0.3,\n        }\n      )\n      // スタートの状態を指定する(ゴールの状態から元に戻る)\n      .from('.js-nav-item a', {\n        stagger: { amount: 0.4 },\n        xPercent: -100,\n      });\n    } else {\n      tl.play();\n    }\n  });\n  closeButton.addEventListener('click', () => {\n    tl.reverse();\n  });\n};\n\n// pattern2=function(){\n//   gsap.set(drawer,{\n//     yPercent:-100,visibility:\"hidden\",ease:Power2.easeInOut}),\n//     gsap.set(\".js-nav-item a\",{yPercent:100});\n//     var e=gsap.timeline({});\n//     openButton.addEventListener(\"click\",(function(){\n//       e.reversed()?e.play():e.to(drawer,{\n//         visibility:\"visible\",yPercent:0\n//     })\n//     .to(\".js-nav-item a\",{\n//       stagger:{amount:.6},yPercent:0\n//     })}))\n//     ,closeButton.addEventListener(\"click\",(function(){\n//       e.reverse()\n//     }))\n//   },\n// pattern3=function(){\n//   gsap.set([drawer,\".js-nav-item a\"],{\n//     visibility:\"hidden\",opacity:0\n//   });\n//   var e=gsap.timeline({onReverseComplete:function(){\n//     gsap.set([drawer,\".js-nav-item a\"],{visibility:\"hidden\",opacity:0})\n//   }});\n//   openButton.addEventListener(\"click\",(function(){\n//     e.reversed()?e.play():e.to(drawer,{\n//       visibility:\"visible\",opacity:1,ease:Power2.easeInOut\n//     })\n//     .to(\".js-nav-item a\",{\n//       stagger:{amount:.6},visibility:\"visible\",opacity:1})\n//   })),\n//   closeButton.addEventListener(\"click\",(function(){\n//     e.reverse()\n//   }))\n// };\n"],"names":["viewWindowWidth","window","innerWidth","addEventListener","VIEW_WINDOW_HEIGHT","innerHeight","document","documentElement","style","setProperty","concat","bodyScrollPrevent","e","tmpPosition","body","getElementsByTagName","getuserAgent","navigator","userAgent","toLowerCase","isUserAgent","indexOf","scrollBarWidth","clientWidth","paddingRight","pageYOffset","position","width","top","overflow","parseInt","replace","scrollTo","drawer","getElementById","openButton","closeButton","isDrawerOpen","changeState","isElementExist","setAttribute","changeAriaExpanded","console","log","drawerMenu","tl","gsap","timeline","set","xPercent","visibility","ease","Power2","easeInOut","reversed","play","to","duration","from","stagger","amount","reverse"],"sourceRoot":""}