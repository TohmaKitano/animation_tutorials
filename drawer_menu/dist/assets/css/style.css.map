{"version":3,"file":"assets/css/style.css","mappings":"AAAA,EACE,oDAIF,SACE,kBACA,UACA,WACA,UACA,YACA,gBAKA,mBAIA,6BACA,qBACA,SAGF,KACE,SACA,yBACA,oBAGF,MACE,gBACA,SACA,UAEA,cAYF,OACE,iBAGA,oCAGF,MAEE,gBAGF,EACE,WACA,qBACA,cAGF,GACE,oCACA,kBACA,qBACA,SACA,mBACA,oBAGF,EACE,oCACA,gBAEF,qBA8BA,QACE,eACA,MACA,WACA,UAGF,cACE,kBACA,6EACA,aACA,cAGF,sBACE,qDACA,kEACA,WAGF,QACE,eACA,MACA,OACA,UACA,iBACA,6DACA,yBACA,oEAKF,4BAEE,kBAGF,kBACE,kBACA,SACA,WAGF,iBACE,gBAGF,mBACE,c","sources":["webpack:///./src/assets/scss/style.scss"],"sourcesContent":["* {\n  box-sizing:border-box\n}\n\n// よくわからん...意味あるのか\n.sr-only {\n  position:absolute;\n  width:1px;\n  height:1px;\n  padding:0;\n  margin:-1px;\n  overflow:hidden;\n  // clip は CSS のプロパティで、要素のどの部分が可視であるかを定義します。 \n  // clip プロパティは絶対配置された要素、つまり position:absolute または position:fixed を持つ要素だけに適用されます。\n  // rect -> rect(<top>, <right>, <bottom>, <left>) 形式の矩形の <shape> です。 \n  // <top> と <bottom> は、ボックス境界の上辺からのオフセットを表します。<right> と <left> は、ボックス境界の左辺からのオフセットを表します。これがボックスの中身となります。\n  clip:rect(0 0 0 0);\n  // clip-path は CSS のプロパティで、要素のどの部分を表示するかを設定するクリッピング領域を作ります。\n  // 具体的には、領域の内部の部分は表示され、外側の部分は非表示になります。\n  // inset() -> 内部の長方形を定義します。\n  -webkit-clip-path:inset(50%);\n  clip-path:inset(50%);\n  border:0\n}\n\nbody {\n  margin:0;\n  background-color:#d3d3d3;\n  letter-spacing:.2em\n}\n\nli,ul {\n  list-style:none;\n  margin:0;\n  padding:0;\n  // vwとは、ビューポートの幅の1/100の大きさを持った単位である。\n  font-size:5vw;\n}\n\n// pre{\n//   line-height:1.5;\n//   background-color:#00008b;\n//   color:#fff;\n//   padding:1em;\n//   white-space:pre-wrap;\n//   letter-spacing:0\n// }\n\nbutton{\n  padding:.5em 1em;\n  // clamp() は CSS の関数で、値を上限と下限の間に制限します。\n  // clamp(MIN, VAL, MAX) は max()(MIN, min()(VAL, MAX)) と同等です。\n  font-size:clamp(16px,3vw,24px)\n}\n\nli+li {\n  // + -> 指定した要素に隣接する要素にスタイルを適用します。\n  margin-top:10vh\n}\n\na {\n  color:#000;\n  text-decoration:none;\n  display:block\n}\n\nh1 {\n  font-size:clamp(20px,5vw,40px);\n  position:relative;\n  display:inline-block;\n  margin:0;\n  white-space:nowrap;\n  letter-spacing:.1em\n}\n\np {\n  font-size:clamp(16px,3vw,20px);\n  margin-top:50vh\n}\np.dummy { margin-top: 0; }\n\n// .bold {\n//   font-weight:700\n// }\n\n// .text-cover{\n//   background-color:#f2ef5b;\n//   display:inline-block;\n//   margin-top:0\n// }\n\n// main {\n//   position:relative;\n//   margin-top:100px;\n//   padding:20px\n// }\n\n// main li {\n//   font-size:3vw\n// }\n\n// footer {\n//   text-align:center\n// }\n\n// --------------------\n// drawer setting\n// --------------------\n\n.header {\n  position:fixed;\n  top:0;\n  width:100%;\n  z-index:1\n}\n\n.header-inner {\n  position:relative;\n  justify-content:space-between;\n  padding:20px;\n  font-size:2vw\n}\n\n.drawer,.header-inner {\n  display:flex;\n  align-items:center;\n  width:100%\n}\n\n.drawer {\n  position:fixed;\n  top:0;\n  left:0;\n  z-index:2;\n  min-height:100vh;\n  min-height:calc(var(--vh, 1vh)*100);\n  background-color:#f2ef5b;\n  justify-content:center\n}\n\n// aria-expanded 属性は、その要素が展開可能であるか、又は展開されている状態をスクリーンリーダーに伝えます。\n// aria-expanded の値が \"false\" の場合は「折りたたみ」、\"true\" の場合は「展開」といった様にスクリーンリーダーが読み上げます。\n.drawer[aria-expanded=true] {\n  // overflow-y は CSS のプロパティで、ブロックレベル要素の内容が上下の境界からあふれた場合、どのように表示するのかを設定します。\n  overflow-y:hidden\n}\n\n.close-drawer-btn {\n  position:absolute;\n  top:20px;\n  right:20px\n}\n\n.drawer-nav-item {\n  overflow:hidden\n}\n\n.drawer-nav-item a {\n  display:block\n}"],"names":[],"sourceRoot":""}